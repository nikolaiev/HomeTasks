    Task2
Создать программу обработки текста учебника по программированию с использованием классов:
Символ, Слово, Предложение, Знак препинания и др. Во всех задачах с формированием текста заменять табуляции и последовательности пробелов одним пробелом.
В каждом предложении текста поменять местами первое слово с последним, не изменяя длины предложения.
Напечатать слова текста в алфавитном порядке по первой
букве. Слова, начинающиеся с новой буквы, печатать с красной строки с.
11*.  Используя PhantomReference написать Factory, которsй контролирует  создание объекта некоторого класса A(количество созданных в памяти объектов не должно превышать определенного количества, которое задается через конструктор Factory)
12*. Реализовать собственный кеш для доступа к файлу с использованием SoftReference.
13.  Используя generics написать сортировку списка, в котором могут храниться элементы некоторого класса или его наследников методом Quicksort, сравнение элементов осуществлять с помощью Comparator
14. Написать generic метод объединения двух списков и c последующей сортировкой полученного списка.
15. Реализовать алгоритм PriorityQueue(класс должен быть дженериком)

Задачи 11 и 12 повышенной сложности, решать не обязательно.
Задачи 11 и 12 повышенной сложности, решать обязательно.
Задачи 11  12 повышенной сложности, решать не обязательно.
Задачи 11  12 повышенной сложности, решать не обязательно.
Задачи 11  12 повышенной сложности, решать не обязательно.
Задачи 11 и 12 повышенной сложности, решать обязательно.
Задачи 11 и 12 повышенной сложности, решать  обязательно.
Задачи  и  повышенной сложности, решать обязательно.
Задачи  и  повышенной сложности, решать не обязательно.
Задачи  и  повышенной сложности, решать не обязательно.
Задачи  и  повышенной сложности, решать не обязательно.

Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.
Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.
Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.
Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.
Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.
Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.
Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.
Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.
Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.
Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.
Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.
Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.
Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.
Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.Привет.
